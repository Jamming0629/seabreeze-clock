{"ast":null,"code":"var _jsxFileName = \"/Users/tajimatakuya/seabreeze-clock/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactP5Wrapper } from '@p5-wrapper/react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const sketch = p5 => {\n    let pixelSize = 4;\n    let cols, rows;\n    p5.setup = () => {\n      p5.createCanvas(p5.windowWidth, p5.windowHeight);\n      cols = Math.floor(p5.width / pixelSize);\n      rows = Math.floor(p5.height / pixelSize);\n    };\n    p5.draw = () => {\n      const hour = time.getHours();\n      const minute = time.getMinutes();\n\n      // 時間帯に基づいて背景色を決定\n      let skyColor, seaColor, sandColor;\n      if (hour >= 5 && hour < 8) {\n        // 朝焼け\n        skyColor = p5.color(255, 165, 0);\n        seaColor = p5.color(0, 100, 200);\n        sandColor = p5.color(255, 220, 150);\n      } else if (hour >= 8 && hour < 17) {\n        // 昼間\n        skyColor = p5.color(135, 206, 235);\n        seaColor = p5.color(0, 150, 255);\n        sandColor = p5.color(255, 235, 180);\n      } else if (hour >= 17 && hour < 20) {\n        // 夕焼け\n        skyColor = p5.color(255, 100, 50);\n        seaColor = p5.color(0, 80, 180);\n        sandColor = p5.color(255, 200, 120);\n      } else {\n        // 夜\n        skyColor = p5.color(20, 30, 60);\n        seaColor = p5.color(0, 40, 100);\n        sandColor = p5.color(100, 80, 60);\n      }\n\n      // 背景を描画\n      p5.background(skyColor);\n\n      // 海を描画（ドット絵風）\n      p5.fill(seaColor);\n      for (let x = 0; x < cols; x++) {\n        for (let y = Math.floor(rows * 0.6); y < rows; y++) {\n          if (p5.random() > 0.3) {\n            p5.rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n          }\n        }\n      }\n\n      // 砂浜を描画\n      p5.fill(sandColor);\n      for (let x = 0; x < cols; x++) {\n        for (let y = Math.floor(rows * 0.7); y < rows; y++) {\n          if (p5.random() > 0.2) {\n            p5.rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n          }\n        }\n      }\n\n      // 波を描画\n      p5.fill(p5.color(seaColor.levels[0] + 30, seaColor.levels[1] + 30, seaColor.levels[2] + 30));\n      for (let x = 0; x < cols; x++) {\n        const waveY = Math.floor(rows * 0.6) + Math.sin(p5.frameCount * 0.02 + x * 0.1) * 3;\n        for (let y = waveY; y < waveY + 2; y++) {\n          if (y >= 0 && y < rows) {\n            p5.rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n          }\n        }\n      }\n\n      // 雲を描画（昼間のみ）\n      if (hour >= 8 && hour < 17) {\n        p5.fill(255);\n        for (let i = 0; i < 5; i++) {\n          const cloudX = (p5.frameCount * 0.5 + i * 200) % (p5.width + 100) - 50;\n          const cloudY = 50 + i * 30;\n          for (let x = 0; x < 8; x++) {\n            for (let y = 0; y < 4; y++) {\n              if (p5.random() > 0.3) {\n                p5.rect(cloudX + x * pixelSize, cloudY + y * pixelSize, pixelSize, pixelSize);\n              }\n            }\n          }\n        }\n      }\n\n      // 星を描画（夜のみ）\n      if (hour < 5 || hour >= 20) {\n        p5.fill(255);\n        for (let i = 0; i < 50; i++) {\n          const starX = i * 37 % p5.width;\n          const starY = i * 73 % Math.floor(rows * 0.6);\n          if (p5.random() > 0.95) {\n            p5.rect(starX, starY, pixelSize, pixelSize);\n          }\n        }\n      }\n    };\n    p5.windowResized = () => {\n      p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n      cols = Math.floor(p5.width / pixelSize);\n      rows = Math.floor(p5.height / pixelSize);\n    };\n  };\n  const formatTime = date => {\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  const formatDate = date => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n    const weekday = weekdays[date.getDay()];\n    return `${year}年${month}月${day}日 (${weekday})`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n      sketch: sketch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: formatDate(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactP5Wrapper","jsxDEV","_jsxDEV","App","_s","time","setTime","Date","timer","setInterval","clearInterval","sketch","p5","pixelSize","cols","rows","setup","createCanvas","windowWidth","windowHeight","Math","floor","width","height","draw","hour","getHours","minute","getMinutes","skyColor","seaColor","sandColor","color","background","fill","x","y","random","rect","levels","waveY","sin","frameCount","i","cloudX","cloudY","starX","starY","windowResized","resizeCanvas","formatTime","date","hours","toString","padStart","minutes","seconds","getSeconds","formatDate","year","getFullYear","month","getMonth","day","getDate","weekdays","weekday","getDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tajimatakuya/seabreeze-clock/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ReactP5Wrapper } from '@p5-wrapper/react';\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const sketch = (p5) => {\n    let pixelSize = 4;\n    let cols, rows;\n    \n    p5.setup = () => {\n      p5.createCanvas(p5.windowWidth, p5.windowHeight);\n      cols = Math.floor(p5.width / pixelSize);\n      rows = Math.floor(p5.height / pixelSize);\n    };\n\n    p5.draw = () => {\n      const hour = time.getHours();\n      const minute = time.getMinutes();\n      \n      // 時間帯に基づいて背景色を決定\n      let skyColor, seaColor, sandColor;\n      \n      if (hour >= 5 && hour < 8) {\n        // 朝焼け\n        skyColor = p5.color(255, 165, 0);\n        seaColor = p5.color(0, 100, 200);\n        sandColor = p5.color(255, 220, 150);\n      } else if (hour >= 8 && hour < 17) {\n        // 昼間\n        skyColor = p5.color(135, 206, 235);\n        seaColor = p5.color(0, 150, 255);\n        sandColor = p5.color(255, 235, 180);\n      } else if (hour >= 17 && hour < 20) {\n        // 夕焼け\n        skyColor = p5.color(255, 100, 50);\n        seaColor = p5.color(0, 80, 180);\n        sandColor = p5.color(255, 200, 120);\n      } else {\n        // 夜\n        skyColor = p5.color(20, 30, 60);\n        seaColor = p5.color(0, 40, 100);\n        sandColor = p5.color(100, 80, 60);\n      }\n\n      // 背景を描画\n      p5.background(skyColor);\n      \n      // 海を描画（ドット絵風）\n      p5.fill(seaColor);\n      for (let x = 0; x < cols; x++) {\n        for (let y = Math.floor(rows * 0.6); y < rows; y++) {\n          if (p5.random() > 0.3) {\n            p5.rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n          }\n        }\n      }\n      \n      // 砂浜を描画\n      p5.fill(sandColor);\n      for (let x = 0; x < cols; x++) {\n        for (let y = Math.floor(rows * 0.7); y < rows; y++) {\n          if (p5.random() > 0.2) {\n            p5.rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n          }\n        }\n      }\n      \n      // 波を描画\n      p5.fill(p5.color(seaColor.levels[0] + 30, seaColor.levels[1] + 30, seaColor.levels[2] + 30));\n      for (let x = 0; x < cols; x++) {\n        const waveY = Math.floor(rows * 0.6) + Math.sin(p5.frameCount * 0.02 + x * 0.1) * 3;\n        for (let y = waveY; y < waveY + 2; y++) {\n          if (y >= 0 && y < rows) {\n            p5.rect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);\n          }\n        }\n      }\n      \n      // 雲を描画（昼間のみ）\n      if (hour >= 8 && hour < 17) {\n        p5.fill(255);\n        for (let i = 0; i < 5; i++) {\n          const cloudX = (p5.frameCount * 0.5 + i * 200) % (p5.width + 100) - 50;\n          const cloudY = 50 + i * 30;\n          for (let x = 0; x < 8; x++) {\n            for (let y = 0; y < 4; y++) {\n              if (p5.random() > 0.3) {\n                p5.rect(cloudX + x * pixelSize, cloudY + y * pixelSize, pixelSize, pixelSize);\n              }\n            }\n          }\n        }\n      }\n      \n      // 星を描画（夜のみ）\n      if (hour < 5 || hour >= 20) {\n        p5.fill(255);\n        for (let i = 0; i < 50; i++) {\n          const starX = (i * 37) % p5.width;\n          const starY = (i * 73) % Math.floor(rows * 0.6);\n          if (p5.random() > 0.95) {\n            p5.rect(starX, starY, pixelSize, pixelSize);\n          }\n        }\n      }\n    };\n\n    p5.windowResized = () => {\n      p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n      cols = Math.floor(p5.width / pixelSize);\n      rows = Math.floor(p5.height / pixelSize);\n    };\n  };\n\n  const formatTime = (date) => {\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n    const weekday = weekdays[date.getDay()];\n    return `${year}年${month}月${day}日 (${weekday})`;\n  };\n\n  return (\n    <div className=\"App\">\n      <ReactP5Wrapper sketch={sketch} />\n      <div className=\"clock-overlay\">\n        <div className=\"time\">{formatTime(time)}</div>\n        <div className=\"date\">{formatDate(time)}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}